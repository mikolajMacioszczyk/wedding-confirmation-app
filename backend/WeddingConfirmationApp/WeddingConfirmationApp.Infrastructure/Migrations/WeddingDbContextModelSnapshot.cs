// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeddingConfirmationApp.Infrastructure;

#nullable disable

namespace WeddingConfirmationApp.Infrastructure.Migrations
{
    [DbContext(typeof(WeddingDbContext))]
    partial class WeddingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.DrinkType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.ToTable("DrinkTypes");
                });

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("InvitationText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PublicId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("InvitationId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InvitationId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.PersonConfirmation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ConfirmedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InvitationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SelectedDrinkId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("InvitationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SelectedDrinkId");

                    b.ToTable("PersonConfirmations");
                });

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.Person", b =>
                {
                    b.HasOne("WeddingConfirmationApp.Domain.Entities.Invitation", "Invitation")
                        .WithMany("Persons")
                        .HasForeignKey("InvitationId");

                    b.Navigation("Invitation");
                });

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.PersonConfirmation", b =>
                {
                    b.HasOne("WeddingConfirmationApp.Domain.Entities.Invitation", "Invitation")
                        .WithMany()
                        .HasForeignKey("InvitationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeddingConfirmationApp.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeddingConfirmationApp.Domain.Entities.DrinkType", "SelectedDrink")
                        .WithMany()
                        .HasForeignKey("SelectedDrinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invitation");

                    b.Navigation("Person");

                    b.Navigation("SelectedDrink");
                });

            modelBuilder.Entity("WeddingConfirmationApp.Domain.Entities.Invitation", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
